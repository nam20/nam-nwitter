{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","firebase","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83d70c31.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from 'fBase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) =>{\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if (name === \"password\") {\r\n            setPassword(value)\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try{\r\n            if(newAccount){\r\n                // create account\r\n                 data = await authService.createUserWithEmailAndPassword(email, password)\r\n            } else {\r\n                // log in\r\n                 data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n            console.log(data)\r\n        } catch(err){\r\n            setError(err.message)\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev)\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                    name=\"email\" \r\n                    type=\"text\" \r\n                    placeholder=\"Email\" \r\n                    required \r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    required \r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n                    className=\"authInput authSubmit\"\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign in\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'fBase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth =  () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name }\r\n        } = event;\r\n        let provider;\r\n\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n\r\n        await authService.signInWithPopup(provider);\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />   \r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\"){\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        } \r\n    }\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        })\r\n        setEditing(false)\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value},\r\n        } = event;\r\n        setNewNweet(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        {isOwner && (\r\n                            <>\r\n                                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                                    <input \r\n                                        type=\"text\"\r\n                                         placeholder=\"Edit your Nweet\" \r\n                                         value={newNweet} \r\n                                         required \r\n                                         onChange={onChange} \r\n                                         autoFocus\r\n                                         className=\"formInput\"\r\n                                    />\r\n                                    <input \r\n                                        type=\"submit\" \r\n                                        value=\"Update Nweet\" \r\n                                        className=\"formBtn\"\r\n                                    />\r\n                                </form>\r\n                                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                                    Cancel\r\n                                </span>\r\n                            </>\r\n                        )}\r\n                    </>\r\n                ) : (\r\n                   <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                  </>\r\n               )       \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet","import { dbService, storageService } from 'fBase';\r\nimport React, { useState } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\")\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt : Date.now(),\r\n            creatorId : userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value }\r\n        } = event;\r\n        setNweet(value)\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target : { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget : { result }\r\n            } = finishedEvent\r\n            setAttachment(result)\r\n        } \r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'fBase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst Home =  ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            setNweets(nweetArray)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet => (\r\n                    <Nweet \r\n                        key={nweet.id} \r\n                        nweetObj={nweet} \r\n                        isOwner={nweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) =>\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n        \r\n    </nav>\r\n\r\nexport default Navigation","import { authService, dbService } from 'fBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    const onChange = (event) => {\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName : newDisplayName,\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n    const getMyNweets = async () => {\r\n        const nweets = await dbService\r\n            .collection(\"nweets\")\r\n            .where(\"creatorId\", \"==\", userObj.uid)\r\n            .orderBy(\"createdAt\")\r\n            .get();\r\n            console.log(nweets.docs.map(doc => doc.data()));\r\n    }\r\n    useEffect(() => {\r\n        getMyNweets();\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n          <form onSubmit={onSubmit} className=\"profileForm\">\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Display name\" \r\n                onChange={onChange} \r\n                value={newDisplayName}\r\n                autoFocus\r\n                className=\"formInput\"\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                    marginTop: 10,\r\n                }}\r\n              />\r\n          </form>\r\n          <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n          </span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\r\n    \r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route> \r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <Route exact path=\"/\">\r\n                            <Auth/>\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </>\r\n                )}\r\n                \r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from 'fBase'\n\nfunction App() {\n \n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args) \n        })\n      } else {\n        setUserObj(null);\n      }\n      setInit(true)\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args) \n    });\n  }\n\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} /> : \"Initializing...\"}\n      \n    </>\n  )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}